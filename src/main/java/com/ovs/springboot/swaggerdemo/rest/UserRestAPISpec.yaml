swagger: '2.0' #version of Swagger
info: # High Level information of API
  description: Sample Swagger Demo #Give the description of API
  version: 1.0.0 #API version
  title: Swagger User Demo # API title
  license: #Swagger license info
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: localhost:8080 # Host Name
basePath: /swagger.json #Basepath when there are multiple versions of API running
schemes:
  - https #security schemes
paths:
  /city/{city}/users: #Request Mapping path of REST API
    get: #Request method type, GET,POST etc.
      summary: get all users in a city #Summary
      description: Returns a city #Description of API operation
      operationId: getCity #Method name
      produces:
        - application/json #Response content type
      parameters:
        - name: city #Input parameter
          in: path #path variable
          required: true #Is mandatory
          type: string #data type
          format: string #data type format
      responses: # API response
        200: #Successful status code
          description: successful #Successful status description
  /user/{id}: #Request Mapping path of REST API
    get: #Request method type, GET,POST etc.
      summary: Find user by ID #Summary
      description: Returns a single user #Description of API operation
      operationId: getUserDetails #Method name
      produces:
        - application/json #Response content type
      parameters:
        - name: id #Input parameter
          in: path #path variable
          description: ID of user to return #description of parameter
          required: true #Is mandatory
          type: string #data type
      responses: # API response
        200: #Successful status code
          description: successful operation #Successful status description
          schema:
            $ref: '#/definitions/User' #Response object details
        404: #Unsuccessful response code
          description: User not found #Unsuccessful response description
  /users:
    get:
      summary: Returns a list of users.
      description: Optional extended description in Markdown.
      produces:
        - application/json
      responses: # API response
        200: #Successful status code
          description: successful operation #Successful status description
definitions: # Object definition
  User:
    type: object
    properties: #Object properties
      id: #Id attribute
        type: integer
        format: int64 #data type format, signed 64 bits
      firstName: #Firstname attribute
        type: string
        description: Persons First Name #data type description
      lastName: #Lastname attribute
        type: string #Data type
        description: Persons Last Name #Data type description
      email: #Email attribute
        type: string
        format: email
      longitude: #Longitude attribute
        type: string
      latitude: #Latitude attribute
        type: string
      city: #City attribute
        type: string
      ipAddress: #IPAddress attribute
        type: string
        format: ipAddress
    required:
      - id
      - name
      - first_name
      - last_name
      - email
      - ip_address
      - longitude
      - latitude

